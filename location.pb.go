// Code generated by protoc-gen-go. DO NOT EDIT.
// source: location.proto

package location

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MAPSubscriberInfoInvoke struct {
	CalledSCCPAddress    string   `protobuf:"bytes,1,opt,name=CalledSCCPAddress,proto3" json:"CalledSCCPAddress,omitempty"`
	CallingSCCPAddress   string   `protobuf:"bytes,2,opt,name=CallingSCCPAddress,proto3" json:"CallingSCCPAddress,omitempty"`
	OTID                 uint32   `protobuf:"varint,3,opt,name=OTID,proto3" json:"OTID,omitempty"`
	DTID                 uint32   `protobuf:"varint,4,opt,name=DTID,proto3" json:"DTID,omitempty"`
	VLR                  string   `protobuf:"bytes,5,opt,name=VLR,proto3" json:"VLR,omitempty"`
	MSC                  string   `protobuf:"bytes,6,opt,name=MSC,proto3" json:"MSC,omitempty"`
	HLR                  string   `protobuf:"bytes,7,opt,name=HLR,proto3" json:"HLR,omitempty"`
	MME                  string   `protobuf:"bytes,8,opt,name=MME,proto3" json:"MME,omitempty"`
	MSISDN               string   `protobuf:"bytes,9,opt,name=MSISDN,proto3" json:"MSISDN,omitempty"`
	IMSI                 string   `protobuf:"bytes,10,opt,name=IMSI,proto3" json:"IMSI,omitempty"`
	IMEI                 string   `protobuf:"bytes,11,opt,name=IMEI,proto3" json:"IMEI,omitempty"`
	Message              string   `protobuf:"bytes,12,opt,name=Message,proto3" json:"Message,omitempty"`
	Protocol             string   `protobuf:"bytes,13,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MAPSubscriberInfoInvoke) Reset()         { *m = MAPSubscriberInfoInvoke{} }
func (m *MAPSubscriberInfoInvoke) String() string { return proto.CompactTextString(m) }
func (*MAPSubscriberInfoInvoke) ProtoMessage()    {}
func (*MAPSubscriberInfoInvoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{0}
}

func (m *MAPSubscriberInfoInvoke) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MAPSubscriberInfoInvoke.Unmarshal(m, b)
}
func (m *MAPSubscriberInfoInvoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MAPSubscriberInfoInvoke.Marshal(b, m, deterministic)
}
func (m *MAPSubscriberInfoInvoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MAPSubscriberInfoInvoke.Merge(m, src)
}
func (m *MAPSubscriberInfoInvoke) XXX_Size() int {
	return xxx_messageInfo_MAPSubscriberInfoInvoke.Size(m)
}
func (m *MAPSubscriberInfoInvoke) XXX_DiscardUnknown() {
	xxx_messageInfo_MAPSubscriberInfoInvoke.DiscardUnknown(m)
}

var xxx_messageInfo_MAPSubscriberInfoInvoke proto.InternalMessageInfo

func (m *MAPSubscriberInfoInvoke) GetCalledSCCPAddress() string {
	if m != nil {
		return m.CalledSCCPAddress
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetCallingSCCPAddress() string {
	if m != nil {
		return m.CallingSCCPAddress
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetOTID() uint32 {
	if m != nil {
		return m.OTID
	}
	return 0
}

func (m *MAPSubscriberInfoInvoke) GetDTID() uint32 {
	if m != nil {
		return m.DTID
	}
	return 0
}

func (m *MAPSubscriberInfoInvoke) GetVLR() string {
	if m != nil {
		return m.VLR
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetMSC() string {
	if m != nil {
		return m.MSC
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetHLR() string {
	if m != nil {
		return m.HLR
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetMME() string {
	if m != nil {
		return m.MME
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetMSISDN() string {
	if m != nil {
		return m.MSISDN
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetIMSI() string {
	if m != nil {
		return m.IMSI
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetIMEI() string {
	if m != nil {
		return m.IMEI
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MAPSubscriberInfoInvoke) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type MAPSubscriberInfoResult struct {
	CalledSCCPAddress    string   `protobuf:"bytes,1,opt,name=CalledSCCPAddress,proto3" json:"CalledSCCPAddress,omitempty"`
	CallingSCCPAddress   string   `protobuf:"bytes,2,opt,name=CallingSCCPAddress,proto3" json:"CallingSCCPAddress,omitempty"`
	OTID                 uint32   `protobuf:"varint,3,opt,name=OTID,proto3" json:"OTID,omitempty"`
	DTID                 uint32   `protobuf:"varint,4,opt,name=DTID,proto3" json:"DTID,omitempty"`
	VLR                  string   `protobuf:"bytes,5,opt,name=VLR,proto3" json:"VLR,omitempty"`
	MSC                  string   `protobuf:"bytes,6,opt,name=MSC,proto3" json:"MSC,omitempty"`
	HLR                  string   `protobuf:"bytes,7,opt,name=HLR,proto3" json:"HLR,omitempty"`
	MME                  string   `protobuf:"bytes,8,opt,name=MME,proto3" json:"MME,omitempty"`
	MSISDN               string   `protobuf:"bytes,9,opt,name=MSISDN,proto3" json:"MSISDN,omitempty"`
	IMSI                 string   `protobuf:"bytes,10,opt,name=IMSI,proto3" json:"IMSI,omitempty"`
	IMEI                 string   `protobuf:"bytes,11,opt,name=IMEI,proto3" json:"IMEI,omitempty"`
	Message              string   `protobuf:"bytes,12,opt,name=Message,proto3" json:"Message,omitempty"`
	Protocol             string   `protobuf:"bytes,13,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	LocationNumber       string   `protobuf:"bytes,14,opt,name=LocationNumber,proto3" json:"LocationNumber,omitempty"`
	MCC                  uint32   `protobuf:"varint,15,opt,name=MCC,proto3" json:"MCC,omitempty"`
	MNC                  uint32   `protobuf:"varint,16,opt,name=MNC,proto3" json:"MNC,omitempty"`
	LAC                  uint32   `protobuf:"varint,17,opt,name=LAC,proto3" json:"LAC,omitempty"`
	CI                   uint32   `protobuf:"varint,18,opt,name=CI,proto3" json:"CI,omitempty"`
	Latitude             float64  `protobuf:"fixed64,19,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,20,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Radius               uint32   `protobuf:"varint,21,opt,name=Radius,proto3" json:"Radius,omitempty"`
	Age                  uint32   `protobuf:"varint,22,opt,name=Age,proto3" json:"Age,omitempty"`
	Status               string   `protobuf:"bytes,23,opt,name=Status,proto3" json:"Status,omitempty"`
	Error                string   `protobuf:"bytes,24,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MAPSubscriberInfoResult) Reset()         { *m = MAPSubscriberInfoResult{} }
func (m *MAPSubscriberInfoResult) String() string { return proto.CompactTextString(m) }
func (*MAPSubscriberInfoResult) ProtoMessage()    {}
func (*MAPSubscriberInfoResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{1}
}

func (m *MAPSubscriberInfoResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MAPSubscriberInfoResult.Unmarshal(m, b)
}
func (m *MAPSubscriberInfoResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MAPSubscriberInfoResult.Marshal(b, m, deterministic)
}
func (m *MAPSubscriberInfoResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MAPSubscriberInfoResult.Merge(m, src)
}
func (m *MAPSubscriberInfoResult) XXX_Size() int {
	return xxx_messageInfo_MAPSubscriberInfoResult.Size(m)
}
func (m *MAPSubscriberInfoResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MAPSubscriberInfoResult.DiscardUnknown(m)
}

var xxx_messageInfo_MAPSubscriberInfoResult proto.InternalMessageInfo

func (m *MAPSubscriberInfoResult) GetCalledSCCPAddress() string {
	if m != nil {
		return m.CalledSCCPAddress
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetCallingSCCPAddress() string {
	if m != nil {
		return m.CallingSCCPAddress
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetOTID() uint32 {
	if m != nil {
		return m.OTID
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetDTID() uint32 {
	if m != nil {
		return m.DTID
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetVLR() string {
	if m != nil {
		return m.VLR
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetMSC() string {
	if m != nil {
		return m.MSC
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetHLR() string {
	if m != nil {
		return m.HLR
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetMME() string {
	if m != nil {
		return m.MME
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetMSISDN() string {
	if m != nil {
		return m.MSISDN
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetIMSI() string {
	if m != nil {
		return m.IMSI
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetIMEI() string {
	if m != nil {
		return m.IMEI
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetLocationNumber() string {
	if m != nil {
		return m.LocationNumber
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetMCC() uint32 {
	if m != nil {
		return m.MCC
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetMNC() uint32 {
	if m != nil {
		return m.MNC
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetLAC() uint32 {
	if m != nil {
		return m.LAC
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetCI() uint32 {
	if m != nil {
		return m.CI
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetRadius() uint32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetAge() uint32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *MAPSubscriberInfoResult) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MAPSubscriberInfoResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Pong struct {
	Msg                  uint32   `protobuf:"varint,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f0f35158dcf9f2c, []int{2}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetMsg() uint32 {
	if m != nil {
		return m.Msg
	}
	return 0
}

func init() {
	proto.RegisterType((*MAPSubscriberInfoInvoke)(nil), "location.MAPSubscriberInfoInvoke")
	proto.RegisterType((*MAPSubscriberInfoResult)(nil), "location.MAPSubscriberInfoResult")
	proto.RegisterType((*Pong)(nil), "location.Pong")
}

func init() {
	proto.RegisterFile("location.proto", fileDescriptor_4f0f35158dcf9f2c)
}

var fileDescriptor_4f0f35158dcf9f2c = []byte{
	// 514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x94, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xeb, 0x34, 0x4d, 0x93, 0x85, 0x84, 0x76, 0x29, 0xe9, 0x28, 0xe5, 0x10, 0x72, 0x40,
	0x39, 0x20, 0x57, 0x2a, 0x4f, 0x60, 0x6d, 0x2c, 0x75, 0x25, 0x3b, 0x44, 0x36, 0xe2, 0xc4, 0xc5,
	0x89, 0xb7, 0xab, 0x08, 0xc7, 0x5b, 0xed, 0xda, 0x48, 0xbc, 0x15, 0xef, 0xc1, 0x33, 0xf4, 0x5d,
	0xd0, 0xce, 0x3a, 0x29, 0xa2, 0x4d, 0x85, 0xd4, 0x2b, 0xb7, 0xf9, 0xbf, 0xf9, 0x35, 0x3b, 0x33,
	0xb2, 0x87, 0x0c, 0x0a, 0xb5, 0xca, 0xaa, 0xb5, 0x2a, 0xfd, 0x5b, 0xad, 0x2a, 0x45, 0xbb, 0x5b,
	0x3d, 0xba, 0x90, 0x4a, 0xc9, 0x42, 0x5c, 0x22, 0x5f, 0xd6, 0x37, 0x97, 0x62, 0x73, 0x5b, 0xfd,
	0x70, 0xb6, 0xc9, 0x5d, 0x8b, 0x9c, 0xc7, 0xc1, 0x22, 0xad, 0x97, 0x66, 0xa5, 0xd7, 0x4b, 0xa1,
	0x79, 0x79, 0xa3, 0x78, 0xf9, 0x5d, 0x7d, 0x13, 0xf4, 0x03, 0x39, 0x65, 0x59, 0x51, 0x88, 0x3c,
	0x65, 0x6c, 0x11, 0xe4, 0xb9, 0x16, 0xc6, 0x80, 0x37, 0xf6, 0xa6, 0xbd, 0xe4, 0x61, 0x82, 0xfa,
	0x84, 0x5a, 0xb8, 0x2e, 0xe5, 0x9f, 0xf6, 0x16, 0xda, 0x1f, 0xc9, 0x50, 0x4a, 0xda, 0x9f, 0x3e,
	0xf3, 0x19, 0x1c, 0x8e, 0xbd, 0x69, 0x3f, 0xc1, 0xd8, 0xb2, 0x99, 0x65, 0x6d, 0xc7, 0x6c, 0x4c,
	0x4f, 0xc8, 0xe1, 0x97, 0x28, 0x81, 0x23, 0x2c, 0x64, 0x43, 0x4b, 0xe2, 0x94, 0x41, 0xc7, 0x91,
	0x38, 0x65, 0x96, 0x5c, 0x47, 0x09, 0x1c, 0x3b, 0x72, 0xdd, 0x78, 0xe2, 0x10, 0xba, 0x8d, 0x27,
	0x0e, 0xe9, 0x90, 0x74, 0xe2, 0x94, 0xa7, 0xb3, 0x39, 0xf4, 0x10, 0x36, 0xca, 0xbe, 0xc9, 0xe3,
	0x94, 0x03, 0x41, 0x8a, 0xb1, 0x63, 0x21, 0x87, 0x17, 0x5b, 0x16, 0x72, 0x0a, 0xe4, 0x38, 0x16,
	0xc6, 0x64, 0x52, 0xc0, 0x4b, 0xc4, 0x5b, 0x49, 0x47, 0xa4, 0xbb, 0xb0, 0xcb, 0x5c, 0xa9, 0x02,
	0xfa, 0x98, 0xda, 0xe9, 0xc9, 0x5d, 0xfb, 0x91, 0xfd, 0x26, 0xc2, 0xd4, 0x45, 0xf5, 0x7f, 0xbf,
	0xcf, 0xdf, 0x2f, 0x7d, 0x4f, 0x06, 0x51, 0xf3, 0xa1, 0xcf, 0xeb, 0xcd, 0x52, 0x68, 0x18, 0xa0,
	0xe3, 0x2f, 0x8a, 0xfd, 0x32, 0x06, 0xaf, 0x70, 0x70, 0x1b, 0x22, 0x99, 0x33, 0x38, 0x69, 0xc8,
	0x1c, 0x49, 0x14, 0x30, 0x38, 0x75, 0x24, 0x0a, 0x18, 0x1d, 0x90, 0x16, 0xe3, 0x40, 0x11, 0xb4,
	0x18, 0xb7, 0x9d, 0x44, 0x59, 0xb5, 0xae, 0xea, 0x5c, 0xc0, 0xeb, 0xb1, 0x37, 0xf5, 0x92, 0x9d,
	0xa6, 0x6f, 0x49, 0x2f, 0x52, 0xa5, 0x74, 0xc9, 0x33, 0x4c, 0xde, 0x03, 0xbb, 0x9d, 0x24, 0xcb,
	0xd7, 0xb5, 0x81, 0x37, 0x58, 0xad, 0x51, 0xf6, 0xcd, 0x40, 0x0a, 0x18, 0xba, 0x37, 0x03, 0x89,
	0xce, 0xb4, 0xca, 0xaa, 0xda, 0xc0, 0xb9, 0xdb, 0xa3, 0x53, 0xf4, 0x8c, 0x1c, 0x85, 0x5a, 0x2b,
	0x0d, 0x80, 0xd8, 0x89, 0x09, 0x90, 0xf6, 0x42, 0x95, 0x12, 0xa7, 0x31, 0x12, 0xbf, 0x1e, 0x3b,
	0x8d, 0x91, 0x57, 0x3f, 0x3d, 0xd2, 0x89, 0x54, 0x96, 0x0b, 0x4d, 0x13, 0x72, 0x61, 0xa3, 0x7d,
	0xff, 0xf9, 0x3b, 0x7f, 0x77, 0x3b, 0xf6, 0x58, 0x46, 0x83, 0x7b, 0x8b, 0x7d, 0x6e, 0x72, 0xb0,
	0xb7, 0x66, 0xf3, 0x6d, 0x3f, 0x55, 0xd3, 0x59, 0x1e, 0xd6, 0xbc, 0xfa, 0xe5, 0x91, 0xbe, 0x6b,
	0x39, 0xad, 0xb4, 0xc8, 0x36, 0x86, 0x7e, 0x7d, 0x76, 0xe7, 0x43, 0xdf, 0x9d, 0x3f, 0x7f, 0x7b,
	0xfe, 0xfc, 0xd0, 0x9e, 0xbf, 0xc9, 0xc1, 0xd4, 0xdb, 0x5b, 0xfd, 0xdf, 0x67, 0x78, 0xa2, 0xfa,
	0xb2, 0x83, 0xec, 0xe3, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x96, 0x9a, 0x20, 0xeb, 0x9a, 0x05,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoaderClient is the client API for Loader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoaderClient interface {
	LoadMAPSubscriberInfoInvoke(ctx context.Context, in *MAPSubscriberInfoInvoke, opts ...grpc.CallOption) (*Pong, error)
	LoadMAPSubscriberInfoResult(ctx context.Context, in *MAPSubscriberInfoResult, opts ...grpc.CallOption) (*Pong, error)
}

type loaderClient struct {
	cc grpc.ClientConnInterface
}

func NewLoaderClient(cc grpc.ClientConnInterface) LoaderClient {
	return &loaderClient{cc}
}

func (c *loaderClient) LoadMAPSubscriberInfoInvoke(ctx context.Context, in *MAPSubscriberInfoInvoke, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/location.Loader/LoadMAPSubscriberInfoInvoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loaderClient) LoadMAPSubscriberInfoResult(ctx context.Context, in *MAPSubscriberInfoResult, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/location.Loader/LoadMAPSubscriberInfoResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoaderServer is the server API for Loader service.
type LoaderServer interface {
	LoadMAPSubscriberInfoInvoke(context.Context, *MAPSubscriberInfoInvoke) (*Pong, error)
	LoadMAPSubscriberInfoResult(context.Context, *MAPSubscriberInfoResult) (*Pong, error)
}

// UnimplementedLoaderServer can be embedded to have forward compatible implementations.
type UnimplementedLoaderServer struct {
}

func (*UnimplementedLoaderServer) LoadMAPSubscriberInfoInvoke(ctx context.Context, req *MAPSubscriberInfoInvoke) (*Pong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadMAPSubscriberInfoInvoke not implemented")
}
func (*UnimplementedLoaderServer) LoadMAPSubscriberInfoResult(ctx context.Context, req *MAPSubscriberInfoResult) (*Pong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadMAPSubscriberInfoResult not implemented")
}

func RegisterLoaderServer(s *grpc.Server, srv LoaderServer) {
	s.RegisterService(&_Loader_serviceDesc, srv)
}

func _Loader_LoadMAPSubscriberInfoInvoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MAPSubscriberInfoInvoke)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoaderServer).LoadMAPSubscriberInfoInvoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.Loader/LoadMAPSubscriberInfoInvoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoaderServer).LoadMAPSubscriberInfoInvoke(ctx, req.(*MAPSubscriberInfoInvoke))
	}
	return interceptor(ctx, in, info, handler)
}

func _Loader_LoadMAPSubscriberInfoResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MAPSubscriberInfoResult)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoaderServer).LoadMAPSubscriberInfoResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.Loader/LoadMAPSubscriberInfoResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoaderServer).LoadMAPSubscriberInfoResult(ctx, req.(*MAPSubscriberInfoResult))
	}
	return interceptor(ctx, in, info, handler)
}

var _Loader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "location.Loader",
	HandlerType: (*LoaderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoadMAPSubscriberInfoInvoke",
			Handler:    _Loader_LoadMAPSubscriberInfoInvoke_Handler,
		},
		{
			MethodName: "LoadMAPSubscriberInfoResult",
			Handler:    _Loader_LoadMAPSubscriberInfoResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "location.proto",
}

// LoaderStreamsClient is the client API for LoaderStreams service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoaderStreamsClient interface {
	LoadMAPSubscriberInfoInvoke(ctx context.Context, opts ...grpc.CallOption) (LoaderStreams_LoadMAPSubscriberInfoInvokeClient, error)
	LoadMAPSubscriberInfoResult(ctx context.Context, opts ...grpc.CallOption) (LoaderStreams_LoadMAPSubscriberInfoResultClient, error)
}

type loaderStreamsClient struct {
	cc grpc.ClientConnInterface
}

func NewLoaderStreamsClient(cc grpc.ClientConnInterface) LoaderStreamsClient {
	return &loaderStreamsClient{cc}
}

func (c *loaderStreamsClient) LoadMAPSubscriberInfoInvoke(ctx context.Context, opts ...grpc.CallOption) (LoaderStreams_LoadMAPSubscriberInfoInvokeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LoaderStreams_serviceDesc.Streams[0], "/location.LoaderStreams/LoadMAPSubscriberInfoInvoke", opts...)
	if err != nil {
		return nil, err
	}
	x := &loaderStreamsLoadMAPSubscriberInfoInvokeClient{stream}
	return x, nil
}

type LoaderStreams_LoadMAPSubscriberInfoInvokeClient interface {
	Send(*MAPSubscriberInfoInvoke) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type loaderStreamsLoadMAPSubscriberInfoInvokeClient struct {
	grpc.ClientStream
}

func (x *loaderStreamsLoadMAPSubscriberInfoInvokeClient) Send(m *MAPSubscriberInfoInvoke) error {
	return x.ClientStream.SendMsg(m)
}

func (x *loaderStreamsLoadMAPSubscriberInfoInvokeClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *loaderStreamsClient) LoadMAPSubscriberInfoResult(ctx context.Context, opts ...grpc.CallOption) (LoaderStreams_LoadMAPSubscriberInfoResultClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LoaderStreams_serviceDesc.Streams[1], "/location.LoaderStreams/LoadMAPSubscriberInfoResult", opts...)
	if err != nil {
		return nil, err
	}
	x := &loaderStreamsLoadMAPSubscriberInfoResultClient{stream}
	return x, nil
}

type LoaderStreams_LoadMAPSubscriberInfoResultClient interface {
	Send(*MAPSubscriberInfoResult) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type loaderStreamsLoadMAPSubscriberInfoResultClient struct {
	grpc.ClientStream
}

func (x *loaderStreamsLoadMAPSubscriberInfoResultClient) Send(m *MAPSubscriberInfoResult) error {
	return x.ClientStream.SendMsg(m)
}

func (x *loaderStreamsLoadMAPSubscriberInfoResultClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LoaderStreamsServer is the server API for LoaderStreams service.
type LoaderStreamsServer interface {
	LoadMAPSubscriberInfoInvoke(LoaderStreams_LoadMAPSubscriberInfoInvokeServer) error
	LoadMAPSubscriberInfoResult(LoaderStreams_LoadMAPSubscriberInfoResultServer) error
}

// UnimplementedLoaderStreamsServer can be embedded to have forward compatible implementations.
type UnimplementedLoaderStreamsServer struct {
}

func (*UnimplementedLoaderStreamsServer) LoadMAPSubscriberInfoInvoke(srv LoaderStreams_LoadMAPSubscriberInfoInvokeServer) error {
	return status.Errorf(codes.Unimplemented, "method LoadMAPSubscriberInfoInvoke not implemented")
}
func (*UnimplementedLoaderStreamsServer) LoadMAPSubscriberInfoResult(srv LoaderStreams_LoadMAPSubscriberInfoResultServer) error {
	return status.Errorf(codes.Unimplemented, "method LoadMAPSubscriberInfoResult not implemented")
}

func RegisterLoaderStreamsServer(s *grpc.Server, srv LoaderStreamsServer) {
	s.RegisterService(&_LoaderStreams_serviceDesc, srv)
}

func _LoaderStreams_LoadMAPSubscriberInfoInvoke_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LoaderStreamsServer).LoadMAPSubscriberInfoInvoke(&loaderStreamsLoadMAPSubscriberInfoInvokeServer{stream})
}

type LoaderStreams_LoadMAPSubscriberInfoInvokeServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*MAPSubscriberInfoInvoke, error)
	grpc.ServerStream
}

type loaderStreamsLoadMAPSubscriberInfoInvokeServer struct {
	grpc.ServerStream
}

func (x *loaderStreamsLoadMAPSubscriberInfoInvokeServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *loaderStreamsLoadMAPSubscriberInfoInvokeServer) Recv() (*MAPSubscriberInfoInvoke, error) {
	m := new(MAPSubscriberInfoInvoke)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _LoaderStreams_LoadMAPSubscriberInfoResult_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LoaderStreamsServer).LoadMAPSubscriberInfoResult(&loaderStreamsLoadMAPSubscriberInfoResultServer{stream})
}

type LoaderStreams_LoadMAPSubscriberInfoResultServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*MAPSubscriberInfoResult, error)
	grpc.ServerStream
}

type loaderStreamsLoadMAPSubscriberInfoResultServer struct {
	grpc.ServerStream
}

func (x *loaderStreamsLoadMAPSubscriberInfoResultServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *loaderStreamsLoadMAPSubscriberInfoResultServer) Recv() (*MAPSubscriberInfoResult, error) {
	m := new(MAPSubscriberInfoResult)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _LoaderStreams_serviceDesc = grpc.ServiceDesc{
	ServiceName: "location.LoaderStreams",
	HandlerType: (*LoaderStreamsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LoadMAPSubscriberInfoInvoke",
			Handler:       _LoaderStreams_LoadMAPSubscriberInfoInvoke_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "LoadMAPSubscriberInfoResult",
			Handler:       _LoaderStreams_LoadMAPSubscriberInfoResult_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "location.proto",
}
